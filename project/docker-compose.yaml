version: "3.3"
services:

  redis:
    image: redis:7.0.4-alpine
    restart: always
    hostname: redis
    ports:
      - "6379:6379"
    networks:
      greenlight-net:


  auth-db:
    image: postgres:12-alpine
    restart: always
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=islamghany
      - POSTGRES_DB=auth

    networks:
      greenlight-net:
    ports:
      - "5433:5432"

    command: -p 5433
    volumes:
      - ./db-data/auth-db/:/var/lib/postgres/data

  auth-service:
    build:
      context: ./../auth-service
      dockerfile: ./../auth-service/Dockerfile
    restart: always
    depends_on:
      - auth-db
      - redis
    networks:
      greenlight-net:
    environment:
      DSN: postgresql://root:islamghany@auth-db:5433/auth?sslmode=disable
      REDIS_HOST: redis
      REDIS_PORT: 6379
      CLIENT_URL: http://localhost:3000
      PORT: 80
  postgres:
    image: postgres:12-alpine
    restart: always
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=islamghany
      - POSTGRES_DB=greenlight
    networks:
      greenlight-net:
    volumes:
      - ./db-data/postgres/:/var/lib/postgres/data

  api:
    build:
      context: ./../greenlight-service
      dockerfile: ./../greenlight-service/Dockerfile
    restart: always
    depends_on:
      - postgres
      - redis
      - auth-service
    environment:
      GREENLIGHT_DB_DSN: postgresql://root:islamghany@postgres:5432/greenlight?sslmode=disable
      REDIS_HOST: redis
      REDIS_PORT: 6379
      GREENLIGHT_TOKEN: greenlight-token
      GREENLIGHT_USERID_TOKEN: greenlight-userId-token
      CLIENT_URL: http://localhost:3000
      PORT: 80
    entrypoint:
      [
        "/app/wait-for.sh",
        "postgres:5432",
        "--",
        "/app/start.sh"
      ]
    command: [ "/app/main" ]
    networks:
      greenlight-net:


  api-gateway:
    depends_on:
      - auth-service
      - api
    restart: always
    build:
      context: ./../api-gateway
      dockerfile: ./../api-gateway/Dockerfile
    ports:
      - "3050:80"
    networks:
      greenlight-net:


  rabbitmq:
    image: "rabbitmq:3.10.7-alpine"
    ports:
      - "5672:5672"
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - ./db-data/rabbitmq/:/var/lib/rabbitmq/
    networks:
      greenlight-net:


  listener-service:
    build:
      context: ./../listener-service
      dockerfile: ./../listener-service/Dockerfile
    restart: always
    networks:
      greenlight-net:
  logger-service:
    build:
      context: ./../logger-service.go
      dockerfile: ./../logger-service.go/Dockerfile
    restart: always
    depends_on:
      - mongo
    networks:
      greenlight-net:
  mail-service:
    build:
      context: ./../mail-service
      dockerfile: ./../mail-service/Dockerfile
    restart: always
    environment:
      MAIL_DOMAIN: localhost
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
      MAIL_ENCRYPTION: none
      MAIL_USERNAME: ""
      MAIL_PASSWORD: ""
      FROM_NAME: "islam ghany"
      FROM_ADDRESS: islam.ghany@example.com
    networks:
      greenlight-net:


  mailhog:
    image: "mailhog/mailhog:latest"
    restart: always
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      greenlight-net:
  mongo:
    image: 'mongo:4.2.23-bionic'
    ports:
      - "27017:27017"
    restart: always
    volumes:
      - ./db-data/mongo/:/data/db
    networks:
      greenlight-net:


networks:
  greenlight-net:


