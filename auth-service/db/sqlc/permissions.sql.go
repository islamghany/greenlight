// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.15.0
// source: permissions.sql

package db

import (
	"context"
)

const addPermissionForUser = `-- name: AddPermissionForUser :exec
INSERT INTO users_permissions (user_id,permission_id)
SELECT $1, permissions.id
FROM permissions WHERE permissions.code = $2
LIMIT 1
`

type AddPermissionForUserParams struct {
	ID   int64  `json:"id"`
	Code string `json:"code"`
}

func (q *Queries) AddPermissionForUser(ctx context.Context, arg AddPermissionForUserParams) error {
	_, err := q.db.ExecContext(ctx, addPermissionForUser, arg.ID, arg.Code)
	return err
}

const getAllPermissionsForUser = `-- name: GetAllPermissionsForUser :many
SELECT permissions.code
FROM permissions
INNER JOIN users_permissions ON users_permissions.permission_id = permissions.id
INNER JOIN users ON users_permissions.user_id = users.id
WHERE users.id = $1
`

func (q *Queries) GetAllPermissionsForUser(ctx context.Context, id int64) ([]string, error) {
	rows, err := q.db.QueryContext(ctx, getAllPermissionsForUser, id)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []string{}
	for rows.Next() {
		var code string
		if err := rows.Scan(&code); err != nil {
			return nil, err
		}
		items = append(items, code)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
